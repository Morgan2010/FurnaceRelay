--library IEEE;
--use IEEE.std_logic_1164.All;

--entity cs_furnrelay is
--    port(
--        state: inout std_logic_vector(2 downto 0);
--        demand: in std_logic;
--        ins_seasonswitch: in std_logic_vector(2 downto 0);
--        instate: inout std_logic_vector(2 downto 0)
--    );
--end entity;

--architecture abstract of cs_furnrelay is
--    constant none: std_logic_vector(2 downto 0) := "000";
--    constant FROff: std_logic_vector(2 downto 0) := "001";
--    constant FROn: std_logic_vector(2 downto 0) := "010";
--    constant SSHeat: std_logic_vector(2 downto 0) := "011";
--    constant furnrelay: std_logic_vector(2 downto 0) := "100";
--    constant ACOn: std_logic_vector(2 downto 0) := "101";
--    constant ACOff: std_logic_vector(2 downto 0) := "110";
--    constant heat: std_logic := '1';
--    constant enough: std_logic := '0';
--begin
--    instate <= state when state/=none;

--    s_FROff: process
--    begin
--        wait until state=FROff;
--        loop
--            wait until demand=heat;
--            if demand=heat and ins_seasonswitch=SSHeat then
--                state <= FROn, none after 1 fs;
--                exit;
--            end if;
--        end loop;
--    end process;

--    s_FROn: process
--    begin
--        wait until state=FROn;
--        loop
--            wait until demand=enough;
--            if demand=enough then
--                state <= FROff, none after 1 fs;
--                exit;
--            end if;
--        end loop;
--    end process;

--    s_init: process
--    begin
--        wait until state=furnrelay;
--        state <= FROff, none after 1 fs;
--    end process;
--end abstract;
